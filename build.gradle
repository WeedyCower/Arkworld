buildscript {
    repositories {
        maven { url  'https://files.minecraftforge.net/maven'}
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'gradle.plugin.com.github.johnrengelman', name: 'shadow', version: '7.1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'maven-publish'

version = '0.2.3-3'
group = 'com.weedycow'

java {
    archivesBaseName = 'Arkworld'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                arkworld {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                arkworld {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories{
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    flatDir{ dirs 'E:/ModProject/WeedyLib/build/libs' }
    maven { url 'https://maven.blamejared.com' }
}

configurations {
    shade
    implementation.extendsFrom(shade)
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'
    shade fg.deobf("software.bernie.geckolib:geckolib-forge-${mc_version}:${geckolib_version}")
    implementation fg.deobf("com.weedycow.weedylib:WeedyLib:${weedylib_version}")
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
}

shadowJar {
    configurations = [project.configurations.shade]

    exclude 'software/bernie/example/**'
    exclude 'assets/geckolib3/**'
    exclude '**/*.java'
    relocate 'software.bernie.shadowed', 'software.bernie.arkworld.shadowed'
    relocate 'software.bernie.geckolib', 'software.bernie.arkworld.geckolib'

    classifier ''

    finalizedBy 'reobfShadowJar'
}

artifacts {
    archives tasks.shadowJar
}

reobf {
    shadowJar {}
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "arkworld",
                //"Specification-Vendor": "arkworld authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                //"Implementation-Vendor": "arkworld authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

sourceSets {
    main {
        output.resourcesDir = file('build/combined')
        java.outputDir = file('build/combined')
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
